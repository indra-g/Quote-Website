{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.jsx"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isTouched","setIsTouched","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","trim","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","newQuote"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCiE/BC,EA9DG,SAACL,GACjB,MAAkCM,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,qCACE,cAAC,IAAD,CACEE,KAAML,EACNM,QAAS,SAACC,GAAD,MACP,wEAGJ,cAAC,EAAD,UACE,uBACEC,QAlBe,WACrBP,GAAa,IAkBPP,UAAWC,IAAQc,KACnBC,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAEZ,KAAzBF,EAAcI,QAAwC,KAAvBD,EAAYC,QAC7CxB,EAAMyB,WAAW,CAAEC,OAAQN,EAAeO,KAAMJ,KAqB9C,UAKGvB,EAAM4B,WACL,qBAAK3B,UAAWC,IAAQ2B,QAAxB,SACE,cAACC,EAAA,EAAD,MAGJ,sBAAK7B,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK1B,OAEtC,sBAAKR,UAAWC,IAAQ6B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKxB,OAEpC,qBAAKV,UAAWC,IAAQmC,QAAxB,SACE,wBAAQC,QAhCG,WACnB9B,GAAa,IA+B0BP,UAAU,MAAzC,kC,gBCvCGsC,UAdE,WACf,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACO,cAAXH,GACFC,EAAQG,KAAR,aAED,CAACH,EAASD,IAIb,OAAO,cAAC,EAAD,CAAWf,UAAsB,YAAXe,EAAsBlB,WAHlC,SAACuB,GAChBN,EAAYM","file":"static/js/6.4d84b617.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isTouched, setIsTouched] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    if (enteredAuthor.trim() !== \"\" && enteredText.trim() !== \"\") {\n      props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    }\n  }\n\n  const onFocusHandler = () => {\n    setIsTouched(true);\n  };\n\n  const ClickHandler = () => {\n    setIsTouched(false);\n  };\n\n  return (\n    <>\n      <Prompt\n        when={isTouched}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={onFocusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={ClickHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../libs/api\";\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(`/quotes`);\n    }\n  }, [history, status]);\n  const AddQuote = (newQuote) => {\n    sendRequest(newQuote);\n  };\n  return <QuoteForm isLoading={status === \"pending\"} onAddQuote={AddQuote} />;\n};\nexport default NewQuote;\n"],"sourceRoot":""}