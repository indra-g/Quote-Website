{"version":3,"sources":["../../../../React Projects/Projects/Quote's Website/src/components/quotes/NoQuotesFound.js","../../../../React Projects/Projects/Quote's Website/src/components/quotes/NoQuotesFound.module.css","../../../../React Projects/Projects/Quote's Website/src/components/quotes/QuoteItem.module.css","../../../../React Projects/Projects/Quote's Website/src/components/quotes/QuoteList.module.css","../../../../React Projects/Projects/Quote's Website/src/components/quotes/QuoteItem.js","../../../../React Projects/Projects/Quote's Website/src/components/quotes/QuoteList.js","../../../../React Projects/Projects/Quote's Website/src/pages/AllQuotes.jsx"],"names":["NoQuotesFound","className","classes","noquotes","to","module","exports","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","AllQuote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"mIAAA,mCAceA,IAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMC,GAAG,YAAYH,UAAU,MAA/B,8B,mBCNNI,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIP,UAAWC,IAAQO,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMV,UAAU,MAAMG,GAAE,kBAAaI,EAAMI,IAA3C,iC,iBCiCSC,EA9BG,SAACL,GACjB,IAXkBM,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAEXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QACrCC,GAfYV,EAecN,EAAMM,OAfZC,EAeoBK,EAdvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAcxC,OACE,eAAC,WAAD,WACE,qBAAKX,UAAWC,IAAQ0B,QAAxB,SACE,yBAAQC,QANe,WAC3Bb,EAAQc,KAAK,iBAAmBV,EAAqB,OAAS,SAK1D,kBACQA,EAAqB,YAAc,iBAG7C,oBAAInB,UAAWC,IAAQ6B,KAAvB,SACGP,EAAaQ,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVD,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMrB,a,gCCARsB,UA3BE,WACf,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAMF,OAJAC,qBAAU,WACRL,MACC,CAACA,IAEW,YAAXC,EAEA,qBAAKrC,UAAU,WAAf,SACE,cAAC0C,EAAA,EAAD,MAIFF,EACK,mBAAGxC,UAAU,mBAAb,SAAiCwC,IAE3B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAGtD,cAAC,EAAD,CAAW9B,OAAQyB,IAFjB,cAACvC,EAAA,EAAD","file":"static/js/5.9ffac513.chunk.js","sourcesContent":["import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"/newQuote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","import classes from \"./QuoteItem.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className=\"btn\" to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n  const changeSortingHandler = () => {\n    history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Decending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import React, { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../libs/api\";\n\nconst AllQuote = () => {\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error,\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return <NoQuotesFound />;\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuote;\n"],"sourceRoot":""}